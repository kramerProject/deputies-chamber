// Code generated by MockGen. DO NOT EDIT.
// Source: application/deputies.go
//
// Generated by this command:
//
//	mockgen -destination=application/mocks/application.go -source=application/deputies.go
//

// Package mock_application is a generated GoMock package.
package mock_application

import (
	reflect "reflect"

	application "github.com/kramerProject/deputies-chamber/application"
	gomock "go.uber.org/mock/gomock"
)

// MockDeputyServiceInterface is a mock of DeputyServiceInterface interface.
type MockDeputyServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockDeputyServiceInterfaceMockRecorder
}

// MockDeputyServiceInterfaceMockRecorder is the mock recorder for MockDeputyServiceInterface.
type MockDeputyServiceInterfaceMockRecorder struct {
	mock *MockDeputyServiceInterface
}

// NewMockDeputyServiceInterface creates a new mock instance.
func NewMockDeputyServiceInterface(ctrl *gomock.Controller) *MockDeputyServiceInterface {
	mock := &MockDeputyServiceInterface{ctrl: ctrl}
	mock.recorder = &MockDeputyServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeputyServiceInterface) EXPECT() *MockDeputyServiceInterfaceMockRecorder {
	return m.recorder
}

// GetAll mocks base method.
func (m *MockDeputyServiceInterface) GetAll() (application.Deputies, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].(application.Deputies)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockDeputyServiceInterfaceMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockDeputyServiceInterface)(nil).GetAll))
}

// MockDeputiesClientInterface is a mock of DeputiesClientInterface interface.
type MockDeputiesClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockDeputiesClientInterfaceMockRecorder
}

// MockDeputiesClientInterfaceMockRecorder is the mock recorder for MockDeputiesClientInterface.
type MockDeputiesClientInterfaceMockRecorder struct {
	mock *MockDeputiesClientInterface
}

// NewMockDeputiesClientInterface creates a new mock instance.
func NewMockDeputiesClientInterface(ctrl *gomock.Controller) *MockDeputiesClientInterface {
	mock := &MockDeputiesClientInterface{ctrl: ctrl}
	mock.recorder = &MockDeputiesClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeputiesClientInterface) EXPECT() *MockDeputiesClientInterfaceMockRecorder {
	return m.recorder
}

// GetAll mocks base method.
func (m *MockDeputiesClientInterface) GetAll() (application.Deputies, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].(application.Deputies)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockDeputiesClientInterfaceMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockDeputiesClientInterface)(nil).GetAll))
}
